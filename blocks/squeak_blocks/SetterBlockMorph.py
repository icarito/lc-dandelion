'From MIT Squeak 0.9.4 (June 1, 2003) [No updates present.] on 30 April 2008 at 1:48:29 pm'!CommandBlockMorph subclass: #SetterBlockMorph	instanceVariableNames: 'variable '	classVariableNames: ''	poolDictionaries: ''	category: 'Scratch-Blocks'!!SetterBlockMorph commentStamp: 'jm 11/25/2003 13:04' prior: 0!I am a block for setting a variable.!!SetterBlockMorph methodsFor: 'initialization' stamp: 'jm 3/31/2005 19:38'!initialize	super initialize.	isSpecialForm _ false.	isTimed _ false.! !!SetterBlockMorph methodsFor: 'accessing' stamp: 'jm 7/7/2004 00:18'!evaluateWithArgs: args	"Overridden to set my variable value."	receiver perform: selector with:variable with: args first.! !!SetterBlockMorph methodsFor: 'accessing' stamp: 'jm 11/15/2006 11:46'!helpScreenName	"Answer the name of the help screen for this hat block, or nil if no help is available."	#setVar:to: = selector		ifTrue: [^ 'variableSet']		ifFalse: [^ 'variableChangeBy']! !!SetterBlockMorph methodsFor: 'accessing' stamp: 'jm 11/25/2003 13:03'!variable	^ variable! !!SetterBlockMorph methodsFor: 'accessing' stamp: 'jm 11/15/2006 11:47'!variable: aVar	variable _ aVar.	self commandSpec: 'set ', aVar, ' to %n'.	self selector: #setVar:to:.! !!SetterBlockMorph methodsFor: 'object i/o' stamp: 'jm 12/1/2003 10:52'!fieldsVersion	^ 1! !!SetterBlockMorph methodsFor: 'object i/o' stamp: 'jm 12/1/2003 10:53'!initFieldsFrom: anObjStream version: classVersion	super initFieldsFrom: anObjStream version: classVersion.	self initFieldsNamed: #(		variable	) from: anObjStream.! !!SetterBlockMorph methodsFor: 'object i/o' stamp: 'jm 12/1/2003 10:56'!storeFieldsOn: anObjStream	super storeFieldsOn: anObjStream.	self storeFieldsNamed: #(		variable	) on: anObjStream.! !!SetterBlockMorph methodsFor: 'private' stamp: 'jm 9/1/2006 12:53'!asBlockTuple	"Answer a tuple (Array) describing this block and its arguments."	| result arg |	result _ Array with: #changeVariable with: variable with: selector with: nil.	arg _ argMorphs first.	(arg isKindOf: ArgMorph)		ifTrue: [result at: 4 put: arg evaluate]		ifFalse: [result at: 4 put: arg asBlockTuple].	^ result! !